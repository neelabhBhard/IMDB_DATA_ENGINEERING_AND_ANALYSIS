{
	"name": "BridgeNameProfession",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DimName1",
						"type": "DatasetReference"
					},
					"name": "DimName"
				},
				{
					"dataset": {
						"referenceName": "DimProfession1",
						"type": "DatasetReference"
					},
					"name": "DimProfession"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable3",
						"type": "DatasetReference"
					},
					"name": "StagingNameBasics"
				},
				{
					"dataset": {
						"referenceName": "BridgeNameProfession",
						"type": "DatasetReference"
					},
					"name": "BridgeNameProfession"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "BridgeNameProfession",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "lookup2"
				},
				{
					"name": "join1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DI_JOB_ID as string (\"10\")",
				"}",
				"source(output(",
				"          NAMEKEY as decimal(10,0),",
				"          NCONST as string,",
				"          PRIMARYNAME as string,",
				"          BIRTHYEAR as string,",
				"          DEATHYEAR as string,",
				"          KNOWNFORTITLES as string,",
				"          DI_JOB_ID as string,",
				"          DI_CREATED_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimName",
				"source(output(",
				"          PROFESSIONKEY as decimal(10,0),",
				"          PROFESSIONNAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_CREATED_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimProfession",
				"source(output(",
				"          NCONST as string,",
				"          PRIMARYNAME as string,",
				"          BIRTHYEAR as string,",
				"          DEATHYEAR as string,",
				"          PROFESSION as string,",
				"          KNOWNFORTITLES as string,",
				"          DI_JOB_ID as string,",
				"          DI_CREATED_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> StagingNameBasics",
				"source(output(",
				"          NAMEPROFESSIONKEY as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'select NVL(max(NAMEPROFESSIONKEY),0) AS NAMEPROFESSIONKEY FROM IMDB_SCHEMA.BRIDGENAMEPROFESSION',",
				"     format: 'query') ~> BridgeNameProfession",
				"StagingNameBasics, DimName lookup(StagingNameBasics@NCONST == DimName@NCONST,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1, DimProfession lookup(PROFESSION == PROFESSIONNAME,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup2",
				"lookup2, BridgeNameProfession join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy(NAMEPROFESSIONKEY,",
				"          NAMEKEY,",
				"          PROFESSIONKEY),",
				"     CountRow = count(NAMEKEY)) ~> aggregate1",
				"aggregate1 keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(NAMEPROFESSIONKEY = NAMEPROFESSIONKEY + RowNum,",
				"          DI_JOB_ID = $DI_JOB_ID,",
				"          DI_CREATED_DT = currentDate(),",
				"          NAMEKEY = iif(isNull(NAMEKEY),00,toInteger(NAMEKEY))) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          NAMEPROFESSIONKEY,",
				"          NAMEKEY,",
				"          PROFESSIONKEY,",
				"          DI_JOB_ID,",
				"          DI_CREATED_DT",
				"     )) ~> sink1"
			]
		}
	}
}